define(["require","framework/EventManager"],function(e){var t=e("framework/EventManager"),n=t.extend({_state:undefined,_data:undefined,constructor:function(e){this._state={},this._state.indexed=!!e,this._initData()},_initData:function(){this._state.indexed?this._data=[]:this._data={}},addSubModel:function(e,t){return e in this._data&&this._data[e]instanceof n?this.get(e):this.set(e,new n(t))},isSet:function(e){return e in this._data&&this._data[e]!=undefined},set:function(e,t){return this._data[e]=t,this._data[e]},push:function(e){if(!this._state.indexed)throw new TypeError("DataModel.add(): Attempting to push to a non-indexed model");var t=this._data.push(e)-1;return this._data[t]},get:function(e){return e==undefined?this._data:this._data[e]},addSubset:function(e,t,n){if(e==undefined)throw new Error("DataModel.addSubset(): no data provided to add");n==undefined&&(n=e.length);var r=0;for(;r<n;r++)this.set(t++,e[r])},hasSubset:function(e,t){return this.get(e)==undefined?!1:!0},getSubset:function(e,t){if(!this._state.indexed)throw new TypeError("DataModel.getSubset(): Attempting to retrieve a subset of a non-indexed model");if(!this.hasSubset(e))return!1;var n=[],r=e,i=e+t;for(;r<i;r++){var s=this.get(r);if(s==undefined)continue;n.push(s)}return n},clear:function(){return this._initData(),this}});return n});