define(["require","framework/EventManager","app/libs/DataModel","framework/Util","jquery"],function(e){var t=e("framework/EventManager"),n=e("app/libs/DataModel"),r=e("framework/Util"),i=e("jquery"),s=t.extend({_config:undefined,_state:undefined,_dataModel:undefined,constructor:function(e){this._config={},this._config.feedURL=e,this._initConfig(),this._boundFunctions={},this._initEvents(),this._state={},this._initState(),this._dataModel=new n},_initConfig:function(){var e=this._config;e.maxFailures=5,e.fetchDelay=0},_initEvents:function(e){},_initState:function(e){var t=this._state;t.failureCounter=0,t.inputParams={},t.fetchTimeout=null},setFeedURL:function(e){this._config.feedURL=e},fetch:function(e,t,n){var r=this._state;r.fetchTimeout&&(clearTimeout(r.fetchTimeout),r.fetchTimeout=null);var i=this._config.fetchDelay;i?r.fetchTimeout=setTimeout(this._fetch.bind(this,e,t),i):this._fetch(e,t,n)},getFeedData:function(){throw new Error("DataFeed.getFeedData() not implemented.")},addInputParam:function(e,t,n,i,s){if(e==undefined)throw new Error('DataFeed.addInputParam(): parameter "name" required but not provided');return s&&!r.Array.isArray(s)&&(s=[s]),this._state.inputParams[e]={value:undefined,required:!!t,defaultValue:n,onChange:{triggerEvent:!!i,clearCaches:s||[]}},this},addInputParamCacheClear:function(e,t){if(e==undefined)throw new Error('DataFeed.addInputParamCacheClear(): parameter "name" required but not provided');var n=this._state;if(n.inputParams[e]==undefined)throw new Error('DataFeed.addInputParamCacheClear(): an input parameter with the name "'+e+'" has not yet been added');var i=n.inputParams[e].onChange.clearCaches;t&&!r.Array.isArray(t)&&(t=[t]);var s=0,o=t.length;for(;s<o;s++)i.push(t[s])},deleteInputParam:function(e){if(e==undefined)throw new Error('DataFeed.deleteInputParam(): parameter "name" required but not provided');return delete this._state.inputParams[e],this},setInputParam:function(e,t,n){var r=this._state.inputParams[e];if(r==undefined)throw new Error('DataFeed.setInputParam(): unable to find input param data for input parameter "'+e+'"; did you add it with addInputParam()?');return r.value==t?!1:(r.value=t,n!=1&&this._inputParamChanged(e),!0)},_inputParamChanged:function(e){var t=this._state.inputParams[e],n=t.onChange.clearCaches,r=n.length;if(r){var i=0;for(;i<r;i++)n[i].clear()}t.onChange.triggerEvent&&this.trigger("inputParamChanged",e,t.value)},getInputParam:function(e){var t=this._state.inputParams[e];if(t.required&&t.value==undefined){if(t.defaultValue==undefined)throw new Error('DataFeed._getAjaxInputParamData(): parameter "'+e+'" is required, no value was supplied, and no default value was set');return t.defaultValue}return t.value},_fetch:function(e,t,n){var i,s=this._state;s.fetchTimeout=null;if(s.failureCounter>this._config.maxFailures){s.failureCounter=0,this.trigger("fetchAborted");return}var o=this._config.feedURL,u=this._getAjaxInputParamData();n=="POST"?(i="application/json",u=JSON.stringify(u)):(n="GET",i="application/x-www-form-urlencoded"),r.Object.extend(u,e),$.ajax({type:n,contentType:i,dataType:"json",url:o,data:u}).error(this._onFetchError.bind(this)).done(this._onDataReceived.bind(this),t)},_getAjaxInputParamData:function(){var e={},t=this._state.inputParams,n;for(n in t){var r=this.getInputParam(n);if(r==undefined)continue;e[n]=r}return e},_onFetchError:function(){this._state.failureCounter++},_onDataReceived:function(e){this._beforeProcessData(e);var t=this._processData(e);this._afterProcessData(t)},_beforeProcessData:function(e){},_processData:function(e){throw new Error("DataFeed._processData() not implemented.")},_afterProcessData:function(e){Object.keys(e).length&&this.trigger("dataProcessed",e)},destroy:function(){this.base()}});return s});