diff a/data_upload/person.py b/data_upload/person.py	(rejected hunks)
@@ -1,33 +0,36 @@
-import os.path, dg.settings
+import os.path
+import dg.settings
+import csv
 
 from django.core.management import setup_environ
-setup_environ(dg.settings)
 
 from geographies.models import Village, Block
 from people.models import PersonGroup, Person
 from coco.models import CocoUser
 
-import csv
+setup_environ(dg.settings)
 
-ERROR=0 #variable to identify if any error occurs in uploaded file
-ERROR_FILENAMES = [] #contains the files to be zipped for download
-SUCCESS_FILENAMES = []
+ERROR = 0 #variable to identify if any error occurs in uploaded file
+ERROR_FILENAMES = [] #error files to be zipped for download
+SUCCESS_FILENAMES = [] #success files to be zipped for download
 
-def add_person(file, user_id, block_id):
+def upload_data(file, user_id, block_id):
     
     file = os.path.join(dg.settings.MEDIA_ROOT, file)
     
     csvfile = open(file, 'rb')
     rows = csv.DictReader(csvfile)    
-    req_field = ['Village_Name','Shg_Name','Member_Name','Member_Surname','Husband_Father_Name','Husband_Father_Surname']
+    
+    req_field = ['Village_Name','Shg_Name','Member_Name','Member_Surname',
+                 'Husband_Father_Name','Husband_Father_Surname']
+    
     for row in rows:
         if set(req_field) == set(row.keys()) and len(req_field) == len(row.keys()):
             execute_upoad(file, user_id, block_id)
             break
         else:
-            prevent_execution = 1
-            return prevent_execution
-            
+            return False
+    return True            
   
 def execute_upoad(file, user_id, block_id):
     global ERROR
